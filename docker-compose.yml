version: '3.1'

services:

  nginx:
    image: nginx:1.19.0-alpine
    ports:
      - 80:80
    volumes:
      - static_volume:${APP_DIR}/staticfiles
      - ./nginx_config:/etc/nginx/conf.d/
    environment:
      - APP_PORT=${APP_PORT}
      - APP_DIR=${APP_DIR}
    depends_on:
      - web
    restart: "on-failure"
    networks:
      - proxynet

  web:
    container_name: PinBoard
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_DIR=${APP_DIR}
      labels:
        - Pinboard
    command: sh -c "
      python manage.py collectstatic --no-input &&
      python manage.py migrate --settings PinBoard.settings.dev &&
      python manage.py createdefaultsuperuser --settings PinBoard.settings.dev &&
      gunicorn PinBoard.wsgi:application -w 2 --bind 0.0.0.0:${APP_PORT}"
    volumes:
      - static_volume:${APP_DIR}/staticfiles
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: "on-failure"
    depends_on:
      - postgres
    networks:
      - proxynet

  postgres:
    image: postgres:15.3
    restart: on-failure
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
      - POSTGRES_PORT=${PG_PORT}
      - POSTGRES_USER=${PG_USER}
    ports:
      - 5432:5432
    networks:
      - proxynet

volumes:
  postgres_data:
  static_volume:

networks:
  proxynet:
    name: pinboard-network
